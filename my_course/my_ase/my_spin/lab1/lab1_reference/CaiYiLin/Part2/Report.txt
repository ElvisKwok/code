Task 2:
  agentB的具体实现参见NS2.pml。
  为了验证statusA和statusB最终总会变成ok状态，在NS2.pml中加入LTL验证：
    ltl BOTH_ARE_OK {<>(statusA == ok && statusB == ok)};
然后运行verifier:

====================================================================================================

spin -a NS2.pml && gcc -DNOREDUCE -o pan pan.c && ./pan -a
ltl BOTH_ARE_OK: <> (((statusA==ok)) && ((statusB==ok)))

(Spin Version 6.2.2 -- 6 June 2012)

Full statespace search for:
	never claim         	+ (BOTH_ARE_OK)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 60 byte, depth reached 29, errors: 0
       21 states, stored (42 visited)
       30 states, matched
       72 transitions (= visited+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.002	equivalent memory usage for states (stored*(State-vector + overhead))
    0.290	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage


unreached in proctype Alice
	(0 of 15 states)
unreached in proctype Bob
	(0 of 13 states)
unreached in claim BOTH_ARE_OK
	_spin_nvr.tmp:6, state 5, "-end-"
	(1 of 5 states)

pan: elapsed time 0 seconds

====================================================================================================
从verifier的输出中可以看到要求的属性是成立的。

Task 3:
通过verifier可以看到原来的LTL不再成立：

====================================================================================================
spin -a NS3.pml && gcc -DNOREDUCE -o pan pan.c && ./pan -a
ltl BOTH_ARE_OK: <> (((statusA==ok)) && ((statusB==ok)))
pan:1: acceptance cycle (at depth 23)
pan: wrote NS3.pml.trail

(Spin Version 6.2.2 -- 6 June 2012)
Warning: Search not completed

Full statespace search for:
	never claim         	+ (BOTH_ARE_OK)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 76 byte, depth reached 35, errors: 1
      354 states, stored (696 visited)
     1117 states, matched
     1813 transitions (= visited+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.035	equivalent memory usage for states (stored*(State-vector + overhead))
    0.284	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage



pan: elapsed time 0 seconds

====================================================================================================
接下来查看trail的输出：

====================================================================================================
spin -t -p NS3.pml
ltl BOTH_ARE_OK: <> (((statusA==ok)) && ((statusB==ok)))
spin: warning, "NS3.pml" is newer than NS3.pml.trail
starting claim 3
spin: couldn't find claim 3 (ignored)
using statement merging
  2:	proc  2 (Intruder) NS3.pml:115 (state 8)	[msg = msg1]
  4:	proc  2 (Intruder) NS3.pml:121 (state 14)	[recpt = agentB]
  6:	proc  2 (Intruder) NS3.pml:124 (state 17)	[data.key = intercepted.key]
  6:	proc  2 (Intruder) NS3.pml:125 (state 18)	[data.content1 = intercepted.content1]
  6:	proc  2 (Intruder) NS3.pml:126 (state 19)	[data.content2 = intercepted.content2]
  8:	proc  1 (Bob) NS3.pml:63 (state 1)	[partnerB = agentA]
 10:	proc  1 (Bob) NS3.pml:64 (state 2)	[pkey = keyA]
 12:	proc  2 (Intruder) NS3.pml:140 (state 34)	[network!msg,recpt,data.key,data.content1,data.content2]
 13:	proc  1 (Bob) NS3.pml:70 (state 3)	[network?msg1,agentB,data.key,data.content1,data.content2]
 15:	proc  2 (Intruder) NS3.pml:115 (state 8)	[msg = msg1]
 17:	proc  2 (Intruder) NS3.pml:120 (state 13)	[recpt = agentA]
 19:	proc  2 (Intruder) NS3.pml:124 (state 17)	[data.key = intercepted.key]
 19:	proc  2 (Intruder) NS3.pml:125 (state 18)	[data.content1 = intercepted.content1]
 19:	proc  2 (Intruder) NS3.pml:126 (state 19)	[data.content2 = intercepted.content2]
 21:	proc  0 (Alice) NS3.pml:23 (state 1)	[partnerA = agentB]
 23:	proc  0 (Alice) NS3.pml:24 (state 2)	[pkey = keyB]
 23:	proc  0 (Alice) NS3.pml:26 (state 3)	[messageAB.key = pkey]
 23:	proc  0 (Alice) NS3.pml:27 (state 4)	[messageAB.content1 = agentA]
 23:	proc  0 (Alice) NS3.pml:28 (state 5)	[messageAB.content2 = nonceA]
  <<<<<START OF CYCLE>>>>>
spin: trail ends after 25 steps
#processes: 3
		partnerA = agentB
		partnerB = agentA
		statusA = err
		statusB = err
 25:	proc  2 (Intruder) NS3.pml:140 (state 34)
 25:	proc  1 (Bob) NS3.pml:75 (state 4)
 25:	proc  0 (Alice) NS3.pml:30 (state 6)
3 processes created
====================================================================================================

可以看到intruder在一开始给agentB发了一个msg1，由于Bob得到的不是
从agentA发出的包，所以一直阻塞在
  (data.key == keyB) && (data.content1 == agentA);
这里。
然后Intruder和Alice尝试往network中发送信息，但由于Bob已经被阻塞，
所以Intruder和Alice都被阻塞，形成了死锁。

Task 4:
把Alice中Initialization部分改为：

  if
    ::true->partnerA = agentB;
      pkey = keyB;
    ::true->partnerA = agentI;
      pkey = keyI;
  fi;

Task 5:
修改之后的程序详见NS6.pml

Task 6:

属性1：ltl PROP_AB {[]((statusA == ok && statusB == ok) -> (partnerA == agentB && partnerB == agentA))}
属性2：ltl PROP_A {[]((statusA == ok && partnerA == agentB) -> (!knows_nonceA))}
属性3：ltl PROP_B {[]((statusB == ok && partnerB == agentA) -> (!knows_nonceB))}

对PROP_AB运行Verifier:
====================================================================================================

pan:1: end state in claim reached (at depth 83)
pan: wrote NS6.pml.trail

(Spin Version 6.2.2 -- 6 June 2012)
Warning: Search not completed
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (PROP_AB)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 80 byte, depth reached 83, errors: 1
      276 states, stored
       61 states, matched
      337 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.028	equivalent memory usage for states (stored*(State-vector + overhead))
    0.282	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage

====================================================================================================

可以看到对PROP_AB存在反例。以下是运行trail的结果：

====================================================================================================
ltl PROP_AB: [] ((! (((statusA==ok)) && ((statusB==ok)))) || (((partnerA==agentB)) && ((partnerB==agentA))))
ltl PROP_A: [] ((! (((statusA==ok)) && ((partnerA==agentB)))) || (! (knows_nonceA)))
ltl PROP_B: [] ((! (((statusB==ok)) && ((partnerB==agentA)))) || (! (knows_nonceB)))
starting claim 3
spin: couldn't find claim 3 (ignored)
using statement merging
  2:	proc  0 (Alice) NS6.pml:29 (state 4)	[(1)]
  4:	proc  2 (Intruder) NS6.pml:114 (state 1)	[knows_nonceA = 0]
  6:	proc  2 (Intruder) NS6.pml:115 (state 2)	[knows_nonceB = 0]
  8:	proc  2 (Intruder) NS6.pml:117 (state 3)	[pnonceA = 0]
  8:	proc  2 (Intruder) NS6.pml:120 (state 4)	[pnonceB = 0]
 10:	proc  1 (Bob) NS6.pml:70 (state 1)	[partnerB = agentA]
 12:	proc  1 (Bob) NS6.pml:71 (state 2)	[pkey = keyA]
 14:	proc  0 (Alice) NS6.pml:29 (state 5)	[partnerA = agentI]
 16:	proc  0 (Alice) NS6.pml:30 (state 6)	[pkey = keyI]
 16:	proc  0 (Alice) NS6.pml:33 (state 9)	[messageAB.key = pkey]
 16:	proc  0 (Alice) NS6.pml:34 (state 10)	[messageAB.content1 = agentA]
 16:	proc  0 (Alice) NS6.pml:35 (state 11)	[messageAB.content2 = nonceA]
 18:	proc  0 (Alice) NS6.pml:37 (state 12)	[network!msg1,partnerA,messageAB.key,messageAB.content1,messageAB.content2]
 19:	proc  2 (Intruder) NS6.pml:121 (state 5)	[network?msg,_,data.key,data.content1,data.content2]
 21:	proc  2 (Intruder) NS6.pml:124 (state 6)	[((data.key==keyI))]
 23:	proc  2 (Intruder) NS6.pml:126 (state 7)	[((msg==msg1))]
 25:	proc  2 (Intruder) NS6.pml:127 (state 8)	[knows_nonceA = 1]
 27:	proc  2 (Intruder) NS6.pml:129 (state 9)	[pnonceA = data.content2]
 29:	proc  2 (Intruder) NS6.pml:146 (state 21)	[((knows_nonceA&&!(knows_nonceB)))]
 31:	proc  2 (Intruder) NS6.pml:146 (state 22)	[msg = msg1]
 33:	proc  2 (Intruder) NS6.pml:152 (state 29)	[(((msg==msg1)||(msg==msg3)))]
 33:	proc  2 (Intruder) NS6.pml:152 (state 30)	[recpt = agentB]
 35:	proc  2 (Intruder) NS6.pml:157 (state 35)	[((msg==msg1))]
 35:	proc  2 (Intruder) NS6.pml:158 (state 36)	[data.key = keyB]
 35:	proc  2 (Intruder) NS6.pml:159 (state 37)	[data.content1 = agentA]
 35:	proc  2 (Intruder) NS6.pml:160 (state 38)	[data.content2 = pnonceA]
 37:	proc  2 (Intruder) NS6.pml:174 (state 49)	[network!msg,recpt,data.key,data.content1,data.content2]
 38:	proc  1 (Bob) NS6.pml:77 (state 3)	[network?msg1,agentB,data.key,data.content1,data.content2]
 40:	proc  1 (Bob) NS6.pml:82 (state 4)	[(((data.key==keyB)&&(data.content1==agentA)))]
 40:	proc  1 (Bob) NS6.pml:85 (state 5)	[pnonce = data.content2]
 40:	proc  1 (Bob) NS6.pml:88 (state 6)	[messageBA.key = pkey]
 40:	proc  1 (Bob) NS6.pml:89 (state 7)	[messageBA.content1 = pnonce]
 40:	proc  1 (Bob) NS6.pml:90 (state 8)	[messageBA.content2 = nonceB]
 42:	proc  1 (Bob) NS6.pml:92 (state 9)	[network!msg2,partnerB,messageBA.key,messageBA.content1,messageBA.content2]
 43:	proc  0 (Alice) NS6.pml:43 (state 13)	[network?msg2,agentA,data.key,data.content1,data.content2]
 45:	proc  0 (Alice) NS6.pml:48 (state 14)	[(((data.key==keyA)&&(data.content1==nonceA)))]
 45:	proc  0 (Alice) NS6.pml:50 (state 15)	[pnonce = data.content2]
 45:	proc  0 (Alice) NS6.pml:52 (state 16)	[messageAB.key = pkey]
 45:	proc  0 (Alice) NS6.pml:53 (state 17)	[messageAB.content1 = pnonce]
 45:	proc  0 (Alice) NS6.pml:54 (state 18)	[messageAB.content2 = 0]
 47:	proc  0 (Alice) NS6.pml:57 (state 19)	[network!msg3,partnerA,messageAB.key,messageAB.content1,messageAB.content2]
 48:	proc  2 (Intruder) NS6.pml:121 (state 5)	[network?msg,_,data.key,data.content1,data.content2]
 50:	proc  2 (Intruder) NS6.pml:124 (state 6)	[((data.key==keyI))]
 52:	proc  2 (Intruder) NS6.pml:131 (state 10)	[((msg==msg3))]
 54:	proc  2 (Intruder) NS6.pml:132 (state 11)	[knows_nonceB = 1]
 56:	proc  2 (Intruder) NS6.pml:134 (state 12)	[pnonceB = data.content1]
 58:	proc  2 (Intruder) NS6.pml:147 (state 23)	[((knows_nonceA&&knows_nonceB))]
 60:	proc  2 (Intruder) NS6.pml:147 (state 24)	[msg = msg3]
 62:	proc  2 (Intruder) NS6.pml:152 (state 29)	[(((msg==msg1)||(msg==msg3)))]
 62:	proc  2 (Intruder) NS6.pml:152 (state 30)	[recpt = agentB]
 64:	proc  2 (Intruder) NS6.pml:167 (state 43)	[((msg==msg3))]
 64:	proc  2 (Intruder) NS6.pml:168 (state 44)	[data.key = keyB]
 64:	proc  2 (Intruder) NS6.pml:169 (state 45)	[data.content1 = pnonceB]
 64:	proc  2 (Intruder) NS6.pml:170 (state 46)	[data.content2 = 0]
 66:	proc  2 (Intruder) NS6.pml:174 (state 49)	[network!msg,recpt,data.key,data.content1,data.content2]
 67:	proc  1 (Bob) NS6.pml:96 (state 10)	[network?msg3,agentB,data.key,data.content1,data.content2]
 69:	proc  1 (Bob) NS6.pml:103 (state 11)	[(((data.key==keyB)&&(data.content1==nonceB)))]
 71:	proc  2 (Intruder) NS6.pml:147 (state 23)	[((knows_nonceA&&knows_nonceB))]
 73:	proc  2 (Intruder) NS6.pml:147 (state 24)	[msg = msg3]
 75:	proc  2 (Intruder) NS6.pml:152 (state 29)	[(((msg==msg1)||(msg==msg3)))]
 75:	proc  2 (Intruder) NS6.pml:152 (state 30)	[recpt = agentB]
 77:	proc  2 (Intruder) NS6.pml:167 (state 43)	[((msg==msg3))]
 77:	proc  2 (Intruder) NS6.pml:168 (state 44)	[data.key = keyB]
 77:	proc  2 (Intruder) NS6.pml:169 (state 45)	[data.content1 = pnonceB]
 77:	proc  2 (Intruder) NS6.pml:170 (state 46)	[data.content2 = 0]
 79:	proc  1 (Bob) NS6.pml:106 (state 12)	[statusB = ok]
 81:	proc  0 (Alice) NS6.pml:59 (state 20)	[statusA = ok]
spin: trail ends after 84 steps
#processes: 3
		partnerA = agentI
		partnerB = agentA
		statusA = ok
		statusB = ok
		knows_nonceA = 1
		knows_nonceB = 1
 84:	proc  2 (Intruder) NS6.pml:174 (state 49)
 84:	proc  1 (Bob) NS6.pml:107 (state 13) <valid end state>
 84:	proc  0 (Alice) NS6.pml:60 (state 21) <valid end state>
3 processes created
====================================================================================================
从trail的结果中可以看出，

首先是Alice选择了Intruder作为通信目标，
它所发出的msg1包被Intruder收到

Intruder通过keyI解密出其中的nonceA，
伪装成Alice向Bob发出msg1包

Bob收到之后发出一个通过keyA加密的msg2包，
这个包被Alice收到

Alice把收到的msg3包解密之后得到nonceB，向Intruder发出
通过keyI加密的包含有nonceB的msg3包。

Intruder通过Alice发过来的msg3包得到nonceB，并伪装成
Alice向Bob发出包含nonceB的，通过keyB加密的msg3包。

Bob收到Intruder发出的msg3包，于是statusA和statusB都被设为ok。

现在对PROP_A运行verifier:

====================================================================================================

./pan -a -N PROP_A

(Spin Version 6.2.2 -- 6 June 2012)
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (PROP_A)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 80 byte, depth reached 83, errors: 0
      331 states, stored
       83 states, matched
      414 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.034	equivalent memory usage for states (stored*(State-vector + overhead))
    0.282	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage


unreached in proctype Alice
	(0 of 21 states)
unreached in proctype Bob
	(0 of 13 states)
unreached in proctype Intruder
	NS6.pml:176, state 53, "-end-"
	(1 of 53 states)
unreached in claim PROP_A
	_spin_nvr.tmp:17, state 8, "-end-"
	(1 of 8 states)
====================================================================================================

可以看出PROP_A并没有被违反。
对PROP_B运行verifer:

====================================================================================================
./pan -a -N PROP_B
pan:1: end state in claim reached (at depth 82)
pan: wrote NS6.pml.trail

(Spin Version 6.2.2 -- 6 June 2012)
Warning: Search not completed
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (PROP_B)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 80 byte, depth reached 82, errors: 1
      275 states, stored
       61 states, matched
      336 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.028	equivalent memory usage for states (stored*(State-vector + overhead))
    0.282	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage

====================================================================================================

可以看出对PROP_B存在反例,以下是运行trail的结果：


====================================================================================================
spin -t -p NS6.pml
ltl PROP_AB: [] ((! (((statusA==ok)) && ((statusB==ok)))) || (((partnerA==agentB)) && ((partnerB==agentA))))
ltl PROP_A: [] ((! (((statusA==ok)) && ((partnerA==agentB)))) || (! (knows_nonceA)))
ltl PROP_B: [] ((! (((statusB==ok)) && ((partnerB==agentA)))) || (! (knows_nonceB)))
starting claim 5
spin: couldn't find claim 5 (ignored)
using statement merging
  2:	proc  0 (Alice) NS6.pml:29 (state 4)	[(1)]
  4:	proc  2 (Intruder) NS6.pml:114 (state 1)	[knows_nonceA = 0]
  6:	proc  2 (Intruder) NS6.pml:115 (state 2)	[knows_nonceB = 0]
  8:	proc  2 (Intruder) NS6.pml:117 (state 3)	[pnonceA = 0]
  8:	proc  2 (Intruder) NS6.pml:120 (state 4)	[pnonceB = 0]
 10:	proc  1 (Bob) NS6.pml:70 (state 1)	[partnerB = agentA]
 12:	proc  1 (Bob) NS6.pml:71 (state 2)	[pkey = keyA]
 14:	proc  0 (Alice) NS6.pml:29 (state 5)	[partnerA = agentI]
 16:	proc  0 (Alice) NS6.pml:30 (state 6)	[pkey = keyI]
 16:	proc  0 (Alice) NS6.pml:33 (state 9)	[messageAB.key = pkey]
 16:	proc  0 (Alice) NS6.pml:34 (state 10)	[messageAB.content1 = agentA]
 16:	proc  0 (Alice) NS6.pml:35 (state 11)	[messageAB.content2 = nonceA]
 18:	proc  0 (Alice) NS6.pml:37 (state 12)	[network!msg1,partnerA,messageAB.key,messageAB.content1,messageAB.content2]
 19:	proc  2 (Intruder) NS6.pml:121 (state 5)	[network?msg,_,data.key,data.content1,data.content2]
 21:	proc  2 (Intruder) NS6.pml:124 (state 6)	[((data.key==keyI))]
 23:	proc  2 (Intruder) NS6.pml:126 (state 7)	[((msg==msg1))]
 25:	proc  2 (Intruder) NS6.pml:127 (state 8)	[knows_nonceA = 1]
 27:	proc  2 (Intruder) NS6.pml:129 (state 9)	[pnonceA = data.content2]
 29:	proc  2 (Intruder) NS6.pml:146 (state 21)	[((knows_nonceA&&!(knows_nonceB)))]
 31:	proc  2 (Intruder) NS6.pml:146 (state 22)	[msg = msg1]
 33:	proc  2 (Intruder) NS6.pml:152 (state 29)	[(((msg==msg1)||(msg==msg3)))]
 33:	proc  2 (Intruder) NS6.pml:152 (state 30)	[recpt = agentB]
 35:	proc  2 (Intruder) NS6.pml:157 (state 35)	[((msg==msg1))]
 35:	proc  2 (Intruder) NS6.pml:158 (state 36)	[data.key = keyB]
 35:	proc  2 (Intruder) NS6.pml:159 (state 37)	[data.content1 = agentA]
 35:	proc  2 (Intruder) NS6.pml:160 (state 38)	[data.content2 = pnonceA]
 37:	proc  2 (Intruder) NS6.pml:174 (state 49)	[network!msg,recpt,data.key,data.content1,data.content2]
 38:	proc  1 (Bob) NS6.pml:77 (state 3)	[network?msg1,agentB,data.key,data.content1,data.content2]
 40:	proc  1 (Bob) NS6.pml:82 (state 4)	[(((data.key==keyB)&&(data.content1==agentA)))]
 40:	proc  1 (Bob) NS6.pml:85 (state 5)	[pnonce = data.content2]
 40:	proc  1 (Bob) NS6.pml:88 (state 6)	[messageBA.key = pkey]
 40:	proc  1 (Bob) NS6.pml:89 (state 7)	[messageBA.content1 = pnonce]
 40:	proc  1 (Bob) NS6.pml:90 (state 8)	[messageBA.content2 = nonceB]
 42:	proc  1 (Bob) NS6.pml:92 (state 9)	[network!msg2,partnerB,messageBA.key,messageBA.content1,messageBA.content2]
 43:	proc  0 (Alice) NS6.pml:43 (state 13)	[network?msg2,agentA,data.key,data.content1,data.content2]
 45:	proc  0 (Alice) NS6.pml:48 (state 14)	[(((data.key==keyA)&&(data.content1==nonceA)))]
 45:	proc  0 (Alice) NS6.pml:50 (state 15)	[pnonce = data.content2]
 45:	proc  0 (Alice) NS6.pml:52 (state 16)	[messageAB.key = pkey]
 45:	proc  0 (Alice) NS6.pml:53 (state 17)	[messageAB.content1 = pnonce]
 45:	proc  0 (Alice) NS6.pml:54 (state 18)	[messageAB.content2 = 0]
 47:	proc  0 (Alice) NS6.pml:57 (state 19)	[network!msg3,partnerA,messageAB.key,messageAB.content1,messageAB.content2]
 48:	proc  2 (Intruder) NS6.pml:121 (state 5)	[network?msg,_,data.key,data.content1,data.content2]
 50:	proc  2 (Intruder) NS6.pml:124 (state 6)	[((data.key==keyI))]
 52:	proc  2 (Intruder) NS6.pml:131 (state 10)	[((msg==msg3))]
 54:	proc  2 (Intruder) NS6.pml:132 (state 11)	[knows_nonceB = 1]
 56:	proc  2 (Intruder) NS6.pml:134 (state 12)	[pnonceB = data.content1]
 58:	proc  2 (Intruder) NS6.pml:147 (state 23)	[((knows_nonceA&&knows_nonceB))]
 60:	proc  2 (Intruder) NS6.pml:147 (state 24)	[msg = msg3]
 62:	proc  2 (Intruder) NS6.pml:152 (state 29)	[(((msg==msg1)||(msg==msg3)))]
 62:	proc  2 (Intruder) NS6.pml:152 (state 30)	[recpt = agentB]
 64:	proc  2 (Intruder) NS6.pml:167 (state 43)	[((msg==msg3))]
 64:	proc  2 (Intruder) NS6.pml:168 (state 44)	[data.key = keyB]
 64:	proc  2 (Intruder) NS6.pml:169 (state 45)	[data.content1 = pnonceB]
 64:	proc  2 (Intruder) NS6.pml:170 (state 46)	[data.content2 = 0]
 66:	proc  2 (Intruder) NS6.pml:174 (state 49)	[network!msg,recpt,data.key,data.content1,data.content2]
 67:	proc  1 (Bob) NS6.pml:96 (state 10)	[network?msg3,agentB,data.key,data.content1,data.content2]
 69:	proc  1 (Bob) NS6.pml:103 (state 11)	[(((data.key==keyB)&&(data.content1==nonceB)))]
 71:	proc  2 (Intruder) NS6.pml:147 (state 23)	[((knows_nonceA&&knows_nonceB))]
 73:	proc  2 (Intruder) NS6.pml:147 (state 24)	[msg = msg3]
 75:	proc  2 (Intruder) NS6.pml:152 (state 29)	[(((msg==msg1)||(msg==msg3)))]
 75:	proc  2 (Intruder) NS6.pml:152 (state 30)	[recpt = agentB]
 77:	proc  2 (Intruder) NS6.pml:167 (state 43)	[((msg==msg3))]
 77:	proc  2 (Intruder) NS6.pml:168 (state 44)	[data.key = keyB]
 77:	proc  2 (Intruder) NS6.pml:169 (state 45)	[data.content1 = pnonceB]
 77:	proc  2 (Intruder) NS6.pml:170 (state 46)	[data.content2 = 0]
 79:	proc  1 (Bob) NS6.pml:106 (state 12)	[statusB = ok]
 81:	proc  0 (Alice) NS6.pml:59 (state 20)	[statusA = ok]
spin: trail ends after 82 steps
#processes: 3
		partnerA = agentI
		partnerB = agentA
		statusA = ok
		statusB = ok
		knows_nonceA = 1
		knows_nonceB = 1
 82:	proc  2 (Intruder) NS6.pml:174 (state 49)
 82:	proc  1 (Bob) NS6.pml:107 (state 13) <valid end state>
 82:	proc  0 (Alice) NS6.pml:60 (state 21) <valid end state>
3 processes created

====================================================================================================
可以看到这里的情况和PROP_AB的反例一样，到最后虽然Bob认为他在和Alice通信，但实际上nonceB被Intruder知道了。

Task 7:

改进之后的协议代码及解释参见NS7.pml

对NS7.pml中的PROP_AB属性运行verifer:

====================================================================================================
/pan -a -N PROP_AB

(Spin Version 6.2.2 -- 6 June 2012)
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (PROP_AB)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 80 byte, depth reached 62, errors: 0
      305 states, stored
       78 states, matched
      383 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.031	equivalent memory usage for states (stored*(State-vector + overhead))
    0.282	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage


unreached in proctype Alice
	(0 of 21 states)
unreached in proctype Bob
	(0 of 14 states)
unreached in proctype Intruder
	NS7.pml:138, state 11, "knows_nonceB = 1"
	NS7.pml:140, state 12, "pnonceB = data.content1"
	NS7.pml:153, state 24, "msg = msg3"
	NS7.pml:175, state 45, "data.content1 = pnonceB"
	NS7.pml:176, state 46, "data.content2 = 0"
	NS7.pml:182, state 53, "-end-"
	(6 of 53 states)
unreached in claim PROP_AB
	_spin_nvr.tmp:8, state 8, "-end-"
	(1 of 8 states)

====================================================================================================

对属性PROP_A运行verifier的结果：

====================================================================================================
./pan -a -N PROP_A 

(Spin Version 6.2.2 -- 6 June 2012)
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (PROP_A)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 80 byte, depth reached 62, errors: 0
      305 states, stored
       78 states, matched
      383 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.031	equivalent memory usage for states (stored*(State-vector + overhead))
    0.282	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage


unreached in proctype Alice
	(0 of 21 states)
unreached in proctype Bob
	(0 of 14 states)
unreached in proctype Intruder
	NS7.pml:138, state 11, "knows_nonceB = 1"
	NS7.pml:140, state 12, "pnonceB = data.content1"
	NS7.pml:153, state 24, "msg = msg3"
	NS7.pml:175, state 45, "data.content1 = pnonceB"
	NS7.pml:176, state 46, "data.content2 = 0"
	NS7.pml:182, state 53, "-end-"
	(6 of 53 states)
unreached in claim PROP_A
	_spin_nvr.tmp:17, state 8, "-end-"
	(1 of 8 states)

====================================================================================================

对属性运行PROP_B的结果：

====================================================================================================

./pan -a -N PROP_B

(Spin Version 6.2.2 -- 6 June 2012)
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (PROP_B)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 80 byte, depth reached 62, errors: 0
      305 states, stored
       78 states, matched
      383 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.031	equivalent memory usage for states (stored*(State-vector + overhead))
    0.282	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage


unreached in proctype Alice
	(0 of 21 states)
unreached in proctype Bob
	(0 of 14 states)
unreached in proctype Intruder
	NS7.pml:138, state 11, "knows_nonceB = 1"
	NS7.pml:140, state 12, "pnonceB = data.content1"
	NS7.pml:153, state 24, "msg = msg3"
	NS7.pml:175, state 45, "data.content1 = pnonceB"
	NS7.pml:176, state 46, "data.content2 = 0"
	NS7.pml:182, state 53, "-end-"
	(6 of 53 states)
unreached in claim PROP_B
	_spin_nvr.tmp:26, state 8, "-end-"
	(1 of 8 states)

====================================================================================================

综上可以看出改进之后的协议同时满足三个属性。
